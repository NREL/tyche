JSON RPC

// Methods
fn get_scenarios() -> scenario_list

fn run_scenario( scenario_state ) -> run_result

fn optimize_scenario( scenario_opt ) -> run_result


// Definitions
scenario_list : [ scenario ]

scenario : {
    name : string
    description : string
    image : url
    id : uuid-
    category_defs : [ category ]
    metric_defs : [ metric ]
}

category : {
    name : string
    description : string
    starting_investment : int
    max_investment : int
}

metric : {
    name : string
    description : string
    starting_opt : int
    opt_slider_min : int
    opt_slider_max : int
}


//

scenario_state : {
    scenario_id: uuid
    category_states: [ category_state ] // 1-1 match with scenario def
}

category_state : {
    investment : int
}

//

scenario_opt : {
    scenario_id: uuid
    portfolio : int
    opt_method: string
    metric_states: [ metric_state ]
}

metric_opt : {
    value: int
    bound_type: string
}


//

run_result : {
    scenario_id : uuid,

    category_state : [int, ...]
    metric_state : [int, ...]

    // 2d array, index by [category_i][metric_i]
    cells: [ [ cell ], ... ]
    per_metric_summary: [] //?
}

cell : {
    x: [ float, ... ]
    // optional box compute?
    box: box_plot
}

box_plot : {
    min:    float
    q1:     float
    median: float
    q3:     float
    max:    float
    outliers: [float, ...]
}
